package application;

import javafx.application.Application;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.Window;


public class Main extends Application {


	private static Main instance;


	private Stage stage;



    @Override
    public void start(Stage stage) throws Exception {
        instance = this;
        this.stage = stage;
        this.stage.setWidth(720);
        this.stage.setHeight(480);
        sendLogout();
        this.stage.show();
    }

    @Override
    public void stop() {
        System.out.println("stop Exiter");
    }

    public static void main(String[] args) {
        launch(args);
    }


    private void replaceSceneContent(Parent controller) {
        Scene scene = this.stage.getScene();



        if (scene == null) {
            scene = new Scene(controller);
            this.stage.setScene(scene);
        } else {
            this.stage.getScene().setRoot(controller);
        }
    }


    public static Main getInstance() {
        return instance;
    }

    public void sendLogout() {
        this.stage.setTitle("Login_Menu");
        Login_Menu controller = new Login_Menu();
        this.replaceSceneContent(controller);
    }


    public void sendSubscribe(){
        this.stage.setTitle("Login_Menu");
        Login_Menu controller = new Login_Menu();
        this.replaceSceneContent(controller);



    }

    public void sendGraphController() {
        this.stage.setTitle("graph");

        Main_graph controller = new Main_graph();

        this.replaceSceneContent(controller);
    }

    public void GraphAndGraph(Window owner) {
        Stage newStage = new Stage();
        newStage.initModality(Modality.APPLICATION_MODAL);
        newStage.initOwner(owner);
        newStage.setWidth(700);
        newStage.setHeight(500);
        newStage.setTitle("UserConfig");
        UserConfigure controller = new UserConfigure();
        newStage.setScene(new Scene(controller));
        newStage.show();
    }
    public void GraphAndSubGraph(Window owner) {
        Stage newStage = new Stage();
        newStage.initModality(Modality.APPLICATION_MODAL);
        newStage.initOwner(owner);
        newStage.setWidth(700);
        newStage.setHeight(500);
        newStage.setTitle("SubGraph");
        sub_graph controller = new sub_graph();
        newStage.setScene(new Scene(controller));
        newStage.show();
    }
  




}
